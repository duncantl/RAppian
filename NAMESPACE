import(XML)
import(RJSONIO)
import(RCurl)
import(CodeAnalysis)
importFrom("utils", "type.convert")

#exportPattern(".*")

# transformToR.R
export(StoR)

# xmlNames.R
export(
    getName,
    getDocType,
    getConstantInfo,
    getCode)

export(procModelNodes,
       procModelVars,
       summarizeProcModel,
       procName)



# sailCode.R

# export(findCalls, getDomains)

# get all UUIDs in a document/text
#export(getUUIDs,
#       mkUUIDMap)

# recordTypes.R
export(
    recordTypeInfo,
    recordType,
    showRecordType,
    recordType2Markdown,
    getUUID
)



# summary.R
export(mkAppInfo, mkSummary)
export(mkCodeInfo)
export(compareTypeCounts)


export(#uses, ruses,
       toplevelUUIDs)

export(rewriteCode, mkCountDfs, table2df, getPMWriteTypes, procModelUses, mergeCounts)
export(customInputs, customOutputs) # called by procModelUses but make them available directly.

export(mapName)


export(readDBDump)
export(dbDump)

export(mapConsValue,
       getDescription,
       getConstants,
       getFolders,
       getFolder,
       getDefinition,
       findComments,
       getRecordTypeCode, 
       getType,
       mapFile,
       mapUUID,
       uuid2File,
       xmlFiles,
       ruleInputs,
       siteInfo,
       usedBy,
       saveTo,
       mkUsesFun2 # ???
       )


export(mkTaskRoleUnitMap)

  # better names to indicate for process model
export(
    customParams, 
    interfaceInfo,
    startForm
)



export(AppianTypesNS)

# Conflicts with CodeAnalysis
export(callGraph)

export(findAppianCalledFuns, findAppianRecordTypeUses, findAppianConstants)


export(isEnvSpecific,
       localVarNames
# varNames - same as localVarNames       
       )

# getCustomizationConstants
# findMissingUUIDs
#
# outputInfo 

# procVars - but procModelVars is exported and parallels procModelNodes
# procModelPos, lanes, plotProcModel.
#
# 


export(changed, cmp, stack, showDiffs, showDiffDF)


# Don't need to export this but make it available for me/others to build on
export(resolveURN)



export(genRecordTypeCode)

export(getTestCases)


export(sql)

export(listLogs, downloadLogs, readTomcatLog)
